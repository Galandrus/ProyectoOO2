{"ast":null,"code":"/*\n * Clase principal de entrada\n */\nfunction XPathInterpreter() {\n  if (arguments.callee.instance) //Singleton pattern\n    return arguments.callee.instance;\n  arguments.callee.instance = this;\n  this.currentElement = null;\n  this.xPaths = null;\n  this.engine = new FullXPathEngine();\n} // setear un unico engine de busqueda de xpath\n\n\nXPathInterpreter.prototype.setEngine = function (engine) {\n  this.engine = engine; //this.engines = new array(engine);\n}; // agregar un engine de busqueda de xpath a los existentes\n\n\nXPathInterpreter.prototype.addEngine = function (engine) {\n  this.engines.add(engine);\n}; // borrar un engine de busqueda de xpaths\n\n\nXPathInterpreter.prototype.removeEngine = function (engine) {\n  if (this.engines.inlude(engine)) {\n    this.engines.remove(this.engines.indexOf(engine));\n  }\n}; // borrar todos los engine de busqueda de xpaths\n\n\nXPathInterpreter.prototype.removeEngines = function () {\n  this.engines = [];\n};\n\nXPathInterpreter.prototype.getMultipleFullPaths = function (element, parent) {\n  var xPathArray = [];\n  if (element == undefined) return;\n\n  try {\n    var path = new FullXPathEngine().getPath(element, document);\n\n    if (path !== undefined && path !== null && path.length && path.length > 0) {\n      for (var j = 0; j < path.length; j++) {\n        xPathArray.push(path[j]);\n      }\n    }\n  } catch (err) {\n    console.log(err);\n  }\n\n  return xPathArray;\n};\n\nXPathInterpreter.prototype.getMultipleRelativeXPaths = function (element, parent, generatesSingleElemSelectors) {\n  var xPathArray = [];\n  if (element == undefined || parent == undefined) return;\n\n  for (var i = 0; i < this.engine.length; i++) {\n    if (this.engine[i].suitableForRelative() && this.engine[i].generatesSingleElemSelectors() == generatesSingleElemSelectors) {\n      try {\n        var path = this.engine[i].getPath(element, parent);\n        console.log(this.engine[i].constructor.name, path);\n\n        if (path !== undefined && path !== null && path.length && path.length > 0) {\n          for (var j = 0; j < path.length; j++) {\n            xPathArray.push(path[j]);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  ;\n  return xPathArray;\n}; // obtener un array de xPaths correspondiente a los engines seteados\n\n\nXPathInterpreter.prototype.getMultipleXPaths = function (element, parent, generatesSingleElemSelectors) {\n  var xPathArray = [];\n  if (element == undefined) return;\n  if (parent == undefined) parent = element.ownerDocument; //var console = element.ownerDocument.defaultView.console; //.log(\"********************************\", element, parent);\n\n  for (var i = 0; i < this.engine.length; i++) {\n    //console.log(this.engine[i].constructor.name, this.engine[i].generatesSingleElemSelectors(), generatesSingleElemSelectors);\n    if (this.engine[i].generatesSingleElemSelectors() == generatesSingleElemSelectors) {\n      try {\n        var path = this.engine[i].getPath(element, parent); //console.log(this.engine[i].constructor.name, path);\n\n        if (path !== undefined && path !== null && path.length && path.length > 0) {\n          for (var j = 0; j < path.length; j++) {\n            if (path[j] != null && path[j].indexOf('.//') > -1) {\n              xPathArray.push(path[j].slice(0, path[j].lastIndexOf(\"[\")));\n            }\n\n            xPathArray.push(path[j]);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  ;\n  return xPathArray;\n}; // obtiene un xpath unico\n\n\nXPathInterpreter.prototype.getPath = function (element, parent) {\n  return this.engine.getPath(element, parent); // return xPathArray;    \n};\n\nXPathInterpreter.prototype.getElementByXPath = function (xpath, node) {\n  //WARNING: I THINK THIS IS NOT PROPERLY WORKING. USE -> getSingleElementByXpath\n  var doc = node && node.ownerDocument ? node.ownerDocument : node;\n  return doc.evaluate(xpath, doc, null, 9, null).singleNodeValue; // 9 = FIRST_ORDERED_NODE_TYPE*/\n};\n\nXPathInterpreter.prototype.getSingleElementByXpath = function (xpath, node) {\n  var doc = node && node.ownerDocument ? node.ownerDocument : node;\n  var results = doc.evaluate(xpath, node, null, XPathResult.ANY_TYPE, null);\n  return results.iterateNext();\n};\n\nXPathInterpreter.prototype.getElementsByXpath = function (xpath, node) {\n  var nodes = [];\n\n  try {\n    var doc = node && node.ownerDocument ? node.ownerDocument : node;\n    var results = doc.evaluate(xpath, doc, null, XPathResult.ANY_TYPE, null);\n    var res = results.iterateNext();\n\n    while (res) {\n      nodes.push(res);\n      res = results.iterateNext();\n    }\n  } catch (err) {\n    console.log(err);\n  }\n\n  return nodes;\n};\n/* \n * Clase strategy\n */\n\n\nfunction XPathSelectorEngine() {} //    if ( arguments.callee.instance )    //Singleton pattern\n//        return arguments.callee.instance;\n//    arguments.callee.instance = this;\n// Funcion para obtener elementos a partir de una expresion\n// antiguo evaluateXpath\n// recibe un nodo base o utiliza el documento\n// una expresion Xpath\n\n\nXPathSelectorEngine.prototype.getElement = function (aNode, aExpr) {\n  var xpe = new aNode.defaultView.XPathEvaluator();\n  var nsResolver = xpe.createNSResolver(aNode.ownerDocument === null ? aNode.documentElement : aNode.ownerDocument.documentElement);\n  var result = xpe.evaluate(aExpr, aNode, nsResolver, 0, null);\n  var found = [];\n  var res;\n\n  while (res = result.iterateNext()) {\n    found.push(res);\n  }\n\n  return found;\n};\n\nXPathSelectorEngine.prototype.suitableForRelative = function () {\n  return false;\n};\n\nXPathSelectorEngine.prototype.generatesSingleElemSelectors = function () {\n  return false;\n};\n/* \n * Estrategia por ID directo\n * Si no lo encuentra devuelve null\n */\n\n\nfunction BasicIdEngine() {\n  if (arguments.callee.instance) //Singleton pattern\n    return arguments.callee.instance;\n  arguments.callee.instance = this;\n}\n\nBasicIdEngine.prototype = new XPathSelectorEngine();\nBasicIdEngine.prototype.constructor = BasicIdEngine;\n\nBasicIdEngine.prototype.getPath = function (element, parent) {\n  if (element && element.id) {\n    return ['.//' + element.nodeName.toLowerCase() + '[@id=\"' + element.id + '\"]'];\n  } else {\n    return;\n  }\n};\n\nBasicIdEngine.prototype.generatesSingleElemSelectors = function () {\n  return true;\n};\n\nfunction ControlTypeBasedEngine() {\n  if (arguments.callee.instance) //Singleton pattern\n    return arguments.callee.instance;\n  arguments.callee.instance = this;\n}\n\nControlTypeBasedEngine.prototype = new XPathSelectorEngine();\nControlTypeBasedEngine.prototype.constructor = ControlTypeBasedEngine;\n\nControlTypeBasedEngine.prototype.getPath = function (element, parent) {\n  if (!element) return;\n  var xpaths = [];\n  var tagName = element.nodeName.toLowerCase();\n  var accumPathEnding = tagName;\n  var traversingElem = element;\n\n  while (traversingElem = traversingElem.parentElement) {\n    if (traversingElem.className) {\n      accumPathEnding = \"*[contains(@class, 'briefCitRow')]/\" + accumPathEnding;\n      break;\n    } else {\n      accumPathEnding = traversingElem.nodeName.toLowerCase() + \"/\" + accumPathEnding;\n    }\n  }\n\n  if (accumPathEnding && accumPathEnding.trim() != \"*\") xpaths.push(\".//\" + accumPathEnding);\n  return xpaths.length && xpaths.length > 0 ? xpaths : undefined;\n};\n/* \n * Función que obtiene un Xpath en relación a todos los elementos con la misma clase.\n */\n\n\nfunction ClassXPathEngine() {\n  if (arguments.callee.instance) //Singleton pattern\n    return arguments.callee.instance;\n  arguments.callee.instance = this;\n}\n\nClassXPathEngine.prototype = new XPathSelectorEngine();\nClassXPathEngine.prototype.constructor = ClassXPathEngine;\n\nClassXPathEngine.prototype.getPath = function (element, parent) {\n  if (!element) return;\n  var elemClass = element.className;\n  if (!elemClass) return;\n  var tagName = element.nodeName.toLowerCase(); // ESTO ES LO QUE DETERMINA COMO SERA EL XPATH -> VER VARIANTES\n\n  var xpaths = [],\n      elemClasses = elemClass.split(\" \");\n\n  for (var i = 0; i < elemClasses.length; i++) {\n    var elemPath = \".//\" + tagName + \"[contains(@class, '\" + elemClasses[i] + \"')]\";\n    var res = this.getElement(element.ownerDocument, elemPath);\n\n    for (var e in res) {\n      if (res[e] == element) {\n        xpaths.push(elemPath);\n        break;\n      }\n    }\n  }\n\n  return xpaths.length && xpaths.length > 0 ? xpaths : undefined;\n};\n/* \n * Estrategia xpath absoluto o full.\n * Funciona como el de firebug\n */\n\n\nfunction FullXPathEngine() {\n  if (arguments.callee.instance) //Singleton pattern\n    return arguments.callee.instance;\n  arguments.callee.instance = this;\n}\n\nFullXPathEngine.prototype = new XPathSelectorEngine();\nFullXPathEngine.prototype.constructor = FullXPathEngine;\n\nFullXPathEngine.prototype.suitableForRelative = function () {\n  return true;\n}; //Función que obtiene un Xpath según su FullPath de árbol DOM. \n\n\nFullXPathEngine.prototype.getPath = function (element, parentNode) {\n  if (element == undefined || parentNode == undefined) return null;\n  var paths = []; // Arma el path hasta llegar al parent node, que puede ser el parametro o \"document\"\n\n  for (; element && element.nodeType == 1 && element != parentNode; element = element.parentNode) {\n    var index = 1; // aumenta el indice para comparar con los hermanos superiores del elemento actual (del mismo tipo)\n\n    for (var sibling = element.previousSibling; sibling; sibling = sibling.previousSibling) {\n      if (sibling.nodeType == 10) //element.ownerDocument.defaultView.Node.DOCUMENT_TYPE_NODE\n        continue;\n      if (sibling.nodeName == element.nodeName) index++;\n    }\n\n    var tagName = element.nodeName.toLowerCase();\n    var pathIndex = \"[\" + index + \"]\";\n    paths.splice(0, 0, tagName + pathIndex);\n  }\n\n  if (paths.length) return [\".//\" + paths.join(\"/\")];else return;\n};\n/* \n * Estrategia CSS path (Se traduce con jquery, $('csspath')\n */\n\n\nfunction CssPathEngine() {\n  if (arguments.callee.instance) //Singleton pattern\n    return arguments.callee.instance;\n  arguments.callee.instance = this;\n}\n\nCssPathEngine.prototype = new XPathSelectorEngine();\nCssPathEngine.prototype.constructor = CssPathEngine; //Función que obtiene un Xpath según su FullPath de árbol DOM. \n\nCssPathEngine.prototype.getPath = function (element, parent) {\n  var paths = [];\n\n  for (; element && element.nodeType == 1; element = element.parentNode) {\n    var selector = this.getElementCSSSelector(element);\n    paths.splice(0, 0, selector);\n  }\n\n  if (paths.length) return paths.join(\" \");else return;\n}; //Funcion utilizada para obtener el selector de cada elemento\n\n\nCssPathEngine.prototype.getElementCSSSelector = function (element) {\n  if (!element || !element.localName) return null;\n  var label = element.localName.toLowerCase();\n  if (element.id) label += \"#\" + element.id;\n  if (element.classList && element.classList.length > 0) label += \".\" + element.classList.item(0);\n  return label;\n}; //Sobre escribo la funcion del padre, porque esto no es un xpath!\n\n\nCssPathEngine.prototype.getElement = function (aNode, aExpr) {\n  if (aNode) {\n    return aNode.querySelector(aExpr);\n  } else {\n    return document.querySelector(aExpr);\n  }\n};\n\nwindow.XPathInterpreter = XPathInterpreter; //console.log(window.XPathInterpreter); //\"do not remove this line\"","map":{"version":3,"sources":["/Users/jcgardey/Sites/refactoring-react/src/refactorings/XPathInterpreter.js"],"names":["XPathInterpreter","arguments","callee","instance","currentElement","xPaths","engine","FullXPathEngine","prototype","setEngine","addEngine","engines","add","removeEngine","inlude","remove","indexOf","removeEngines","getMultipleFullPaths","element","parent","xPathArray","undefined","path","getPath","document","length","j","push","err","console","log","getMultipleRelativeXPaths","generatesSingleElemSelectors","i","suitableForRelative","constructor","name","getMultipleXPaths","ownerDocument","slice","lastIndexOf","getElementByXPath","xpath","node","doc","evaluate","singleNodeValue","getSingleElementByXpath","results","XPathResult","ANY_TYPE","iterateNext","getElementsByXpath","nodes","res","XPathSelectorEngine","getElement","aNode","aExpr","xpe","defaultView","XPathEvaluator","nsResolver","createNSResolver","documentElement","result","found","BasicIdEngine","id","nodeName","toLowerCase","ControlTypeBasedEngine","xpaths","tagName","accumPathEnding","traversingElem","parentElement","className","trim","ClassXPathEngine","elemClass","elemClasses","split","elemPath","e","parentNode","paths","nodeType","index","sibling","previousSibling","pathIndex","splice","join","CssPathEngine","selector","getElementCSSSelector","localName","label","classList","item","querySelector","window"],"mappings":"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","sourcesContent":["/*\n * Clase principal de entrada\n */\nfunction XPathInterpreter() {\n    if ( arguments.callee.instance )    //Singleton pattern\n        return arguments.callee.instance;\n    arguments.callee.instance = this;\n    this.currentElement = null;\n    this.xPaths = null;\n    this.engine = new FullXPathEngine();\n\n}\n// setear un unico engine de busqueda de xpath\nXPathInterpreter.prototype.setEngine = function(engine) {\n    this.engine = engine;\n    //this.engines = new array(engine);\n};\n\n// agregar un engine de busqueda de xpath a los existentes\nXPathInterpreter.prototype.addEngine = function(engine) {\n    this.engines.add(engine);\n};\n\n// borrar un engine de busqueda de xpaths\nXPathInterpreter.prototype.removeEngine = function(engine) {\n    if (this.engines.inlude(engine)){\n        this.engines.remove(this.engines.indexOf(engine));\n    }\n};\n\n// borrar todos los engine de busqueda de xpaths\nXPathInterpreter.prototype.removeEngines = function() {\n    this.engines = [];\n};\n\nXPathInterpreter.prototype.getMultipleFullPaths = function(element, parent) {\n    \n    var xPathArray = [];\n    if(element == undefined) return;\n\n    try{\n        var path = (new FullXPathEngine()).getPath(element, document);\n        if (path !== undefined && path !== null && path.length && path.length > 0){\n\n            for (var j = 0; j < path.length; j++) {\n                \n                xPathArray.push(path[j]);                        \n            } \n        }\n    }catch(err){ console.log(err); }\n\n    return xPathArray;\n};\n\nXPathInterpreter.prototype.getMultipleRelativeXPaths = function(element, parent, generatesSingleElemSelectors) {\n    \n    var xPathArray = [];\n    if(element == undefined || parent == undefined)\n        return;\n\n    for (var i = 0; i < this.engine.length; i++) {\n\n        if(this.engine[i].suitableForRelative() && (this.engine[i].generatesSingleElemSelectors() == generatesSingleElemSelectors)){\n            try{\n                var path = this.engine[i].getPath(element, parent);\n                console.log(this.engine[i].constructor.name, path);\n                if (path !== undefined && path !== null && path.length && path.length > 0){\n\n                    for (var j = 0; j < path.length; j++) {\n                        \n                        xPathArray.push(path[j]);                        \n                    } \n                }\n            }catch(err){ console.log(err); }\n        }\n    };\n\n    return xPathArray;\n};\n\n\n// obtener un array de xPaths correspondiente a los engines seteados\nXPathInterpreter.prototype.getMultipleXPaths = function(element, parent, generatesSingleElemSelectors) {\n    \n    var xPathArray = [];\n    if(element == undefined)\n        return;\n\n    if(parent == undefined)\n        parent = element.ownerDocument;\n\n\n    //var console = element.ownerDocument.defaultView.console; //.log(\"********************************\", element, parent);\n    for (var i = 0; i < this.engine.length; i++) {\n\n        //console.log(this.engine[i].constructor.name, this.engine[i].generatesSingleElemSelectors(), generatesSingleElemSelectors);\n        if(this.engine[i].generatesSingleElemSelectors() == generatesSingleElemSelectors){\n            try{\n                var path = this.engine[i].getPath(element, parent);\n                //console.log(this.engine[i].constructor.name, path);\n\n                if (path !== undefined && path !== null && path.length && path.length > 0){\n\n                    for (var j = 0; j < path.length; j++) {\n                        \n                        if(path[j] != null && path[j].indexOf('.//')>-1){\n                            xPathArray.push(path[j].slice(0,path[j].lastIndexOf(\"[\")));\n                        }\n                        \n                        xPathArray.push(path[j]);                        \n                    } \n                }\n            }catch(err){ console.log(err); }\n        }\n    };\n    return xPathArray;\n};\n\n// obtiene un xpath unico\nXPathInterpreter.prototype.getPath = function(element, parent) {\n    return this.engine.getPath(element, parent);\n    // return xPathArray;    \n};\n\nXPathInterpreter.prototype.getElementByXPath = function(xpath, node){\n    //WARNING: I THINK THIS IS NOT PROPERLY WORKING. USE -> getSingleElementByXpath\n    var doc = (node && node.ownerDocument)? node.ownerDocument : node;\n    return  doc.evaluate( xpath, doc, null, \n        9, null).singleNodeValue; // 9 = FIRST_ORDERED_NODE_TYPE*/\n}\nXPathInterpreter.prototype.getSingleElementByXpath = function(xpath, node) {\n\n    var doc = (node && node.ownerDocument)? node.ownerDocument : node;\n    var results = doc.evaluate(xpath, node, null, XPathResult.ANY_TYPE, null); \n    return results.iterateNext(); \n};\nXPathInterpreter.prototype.getElementsByXpath = function(xpath, node) {\n\n    var nodes = [];\n\n    try{\n        var doc = (node && node.ownerDocument)? node.ownerDocument : node;\n        var results = doc.evaluate(xpath, doc, null, XPathResult.ANY_TYPE, null); \n        var res = results.iterateNext(); \n\n        while (res) {\n          nodes.push(res);\n          res = results.iterateNext();\n        }\n    }catch(err){ console.log(err)}\n\n    return nodes;\n};\n\n\n/* \n * Clase strategy\n */\nfunction XPathSelectorEngine() {\n//    if ( arguments.callee.instance )    //Singleton pattern\n//        return arguments.callee.instance;\n//    arguments.callee.instance = this;\n}\n\n// Funcion para obtener elementos a partir de una expresion\n// antiguo evaluateXpath\n// recibe un nodo base o utiliza el documento\n// una expresion Xpath\nXPathSelectorEngine.prototype.getElement = function(aNode, aExpr) {\n   \n    var xpe = new aNode.defaultView.XPathEvaluator();\n    var nsResolver = xpe.createNSResolver(aNode.ownerDocument === null ?\n        aNode.documentElement : aNode.ownerDocument.documentElement);\n    var result = xpe.evaluate(aExpr, aNode, nsResolver, 0, null);\n    var found = [];\n    var res;\n    while (res = result.iterateNext())\n        found.push(res);\n    return found;\n};\nXPathSelectorEngine.prototype.suitableForRelative = function() {\n   \n    return false;\n};\nXPathSelectorEngine.prototype.generatesSingleElemSelectors = function() {\n   \n    return false;\n};\n\n\n/* \n * Estrategia por ID directo\n * Si no lo encuentra devuelve null\n */\nfunction BasicIdEngine() {\n    if ( arguments.callee.instance )    //Singleton pattern\n        return arguments.callee.instance;\n    arguments.callee.instance = this;\n}\n\nBasicIdEngine.prototype = new XPathSelectorEngine();\nBasicIdEngine.prototype.constructor = BasicIdEngine;\n\nBasicIdEngine.prototype.getPath = function(element, parent){\n\n    if (element && element.id){\n        return ['.//'+ element.nodeName.toLowerCase() +'[@id=\"' + element.id + '\"]']; \n    }else{\n        return; \n    }\n};\nBasicIdEngine.prototype.generatesSingleElemSelectors = function() {\n   \n    return true;\n};\n\n\n\n\nfunction ControlTypeBasedEngine() {\n    if ( arguments.callee.instance )    //Singleton pattern\n        return arguments.callee.instance;\n    arguments.callee.instance = this;\n}\nControlTypeBasedEngine.prototype = new XPathSelectorEngine();\nControlTypeBasedEngine.prototype.constructor = ControlTypeBasedEngine;\nControlTypeBasedEngine.prototype.getPath = function(element, parent){\n\n    if (!element) return;\n    \n    var xpaths = [];\n    var tagName = element.nodeName.toLowerCase();\n    var accumPathEnding = tagName;\n    var traversingElem = element;\n\n    while (traversingElem = traversingElem.parentElement){\n        if(traversingElem.className){\n            accumPathEnding = \"*[contains(@class, 'briefCitRow')]/\" + accumPathEnding;\n            break;\n        }\n        else{\n            accumPathEnding = traversingElem.nodeName.toLowerCase() + \"/\" + accumPathEnding;\n        }\n    }\n\n    if(accumPathEnding && accumPathEnding.trim() != \"*\")\n        xpaths.push(\".//\" + accumPathEnding);\n\n    return (xpaths.length && xpaths.length > 0)? xpaths:undefined;\n}\n\n/* \n * Función que obtiene un Xpath en relación a todos los elementos con la misma clase.\n */\nfunction ClassXPathEngine() {\n    if ( arguments.callee.instance )    //Singleton pattern\n        return arguments.callee.instance;\n    arguments.callee.instance = this;\n}\n\nClassXPathEngine.prototype = new XPathSelectorEngine();\nClassXPathEngine.prototype.constructor = ClassXPathEngine;\n\nClassXPathEngine.prototype.getPath = function(element, parent){\n\n    if (!element) return;\n    var elemClass = element.className;\n    if (!elemClass) return;\n    var tagName = element.nodeName.toLowerCase();\n    \n    // ESTO ES LO QUE DETERMINA COMO SERA EL XPATH -> VER VARIANTES\n    var xpaths = [], elemClasses = elemClass.split(\" \");\n\n    for (var i = 0; i < elemClasses.length; i++) {\n\n        var elemPath = \".//\"+tagName+\"[contains(@class, '\"+ elemClasses[i] +\"')]\";\n        var res = this.getElement(element.ownerDocument, elemPath);\n        for (var e in res){\n            if (res[e]==element){\n                xpaths.push(elemPath);\n                break;\n            }\n        }\n    }\n    return (xpaths.length && xpaths.length > 0)? xpaths:undefined;\n};\n\n\n/* \n * Estrategia xpath absoluto o full.\n * Funciona como el de firebug\n */\nfunction FullXPathEngine() {\n    if ( arguments.callee.instance )    //Singleton pattern\n        return arguments.callee.instance;\n    arguments.callee.instance = this;\n}\n\nFullXPathEngine.prototype = new XPathSelectorEngine();\nFullXPathEngine.prototype.constructor = FullXPathEngine;\n\nFullXPathEngine.prototype.suitableForRelative = function() {\n   \n    return true;\n};\n\n//Función que obtiene un Xpath según su FullPath de árbol DOM. \nFullXPathEngine.prototype.getPath = function(element, parentNode) {\n\n    if(element == undefined || parentNode == undefined)\n        return null;\n    var paths = [];\n    // Arma el path hasta llegar al parent node, que puede ser el parametro o \"document\"\n    for (   ;  \n            element && element.nodeType == 1 && element != parentNode; \n            element = element.parentNode) {\n        var index = 1;\n\n        // aumenta el indice para comparar con los hermanos superiores del elemento actual (del mismo tipo)\n        for (var sibling = element.previousSibling; sibling; sibling = sibling.previousSibling) {\n            if (sibling.nodeType == 10) //element.ownerDocument.defaultView.Node.DOCUMENT_TYPE_NODE\n                continue;\n            if (sibling.nodeName == element.nodeName)\n                index++;\n        }\n\n        var tagName = element.nodeName.toLowerCase();\n        var pathIndex = \"[\" + (index) + \"]\";\n        paths.splice(0, 0, tagName + pathIndex);\n    }\n    if(paths.length)\n        return [\".//\" + paths.join(\"/\")];\n    else return;\n};\n\n/* \n * Estrategia CSS path (Se traduce con jquery, $('csspath')\n */\nfunction CssPathEngine() {\n    if ( arguments.callee.instance )    //Singleton pattern\n        return arguments.callee.instance;\n    arguments.callee.instance = this;\n}\n\nCssPathEngine.prototype = new XPathSelectorEngine();\nCssPathEngine.prototype.constructor = CssPathEngine;\n\n//Función que obtiene un Xpath según su FullPath de árbol DOM. \nCssPathEngine.prototype.getPath = function(element, parent){\n    var paths = [];\n\n    for (; element && element.nodeType == 1; element = element.parentNode)\n    {\n        var selector = this.getElementCSSSelector(element);\n        paths.splice(0, 0, selector);\n    }\n\n    if(paths.length)\n        return paths.join(\" \");\n    else return;\n};\n\n//Funcion utilizada para obtener el selector de cada elemento\nCssPathEngine.prototype.getElementCSSSelector = function(element){\n    if (!element || !element.localName)\n        return null;\n\n    var label = element.localName.toLowerCase();\n    if (element.id)\n    label += \"#\" + element.id;\n\n    if (element.classList && element.classList.length > 0)\n    label += \".\" + element.classList.item(0);\n\n    return label;\n};\n\n\n//Sobre escribo la funcion del padre, porque esto no es un xpath!\nCssPathEngine.prototype.getElement = function(aNode, aExpr) {    \n    if (aNode){\n        return aNode.querySelector(aExpr);\n    }else{\n        return document.querySelector(aExpr);\n    }\n\n};\n\nwindow.XPathInterpreter = XPathInterpreter;\n//console.log(window.XPathInterpreter); //\"do not remove this line\""]},"metadata":{},"sourceType":"module"}